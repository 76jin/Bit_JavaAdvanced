<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation=
       "http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee.xsd">

  <!-- 컴포넌트 자동 스캔 => 자동 생성 => 의존 객체 자동 주입
      - @Component가 붙은 클래스를 찾아 객체를 자동 생성하게 만든다.
      context:component-scan 태그 추가
       => (클래스를 찾아) 이 작업을 처리하는 객체가 등록된다.
       => context:annotation-config는 자동으로 활성화된다.
  -->
  <context:component-scan base-package="sems.controls.ajax" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="10000000" />

	</bean>
	
	<!-- DispatcherServlet에게 JSP의 위치를 알려줌
	     => DispatcherServlet은 실제 자신이 직접 JSP를 include 하지 않는다.
	     => 뷰를 찾아서 실행해 주는 부하에게 맡긴다. (ViewResolver)
	     => 즉, 뷰 리졸버(해결사)에게 JSP가 있는 위치를 말해야 한다.
	     => 스프링에서는 다양한 ViewResolver를 제공한다.
	     
	     PageController가 리턴하는 view 주소에 아래의 prefix가 자동으로 붙는다.
	 -->
	 <!-- JSON 자동 변환을 처리하려면, JSP와 JSON 변환 사이에 중재자를 등록해야 한다. -->
	 <!-- 
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	 -->
	 
	 <!-- 기본은 defaultViews인데, 없으면 아래 정의한 다른 것들도 쓰겠다는 의미 -->
	 <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    <property name="mediaTypes">
        <map>
            <entry key="atom" value="application/atom+xml"/>
            <entry key="html" value="text/html"/>
            <entry key="json" value="application/json"/>
        </map>
    </property>
    <property name="viewResolvers">
        <list>
            <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
            <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                <property name="prefix" value="/WEB-INF/views/"/>
                <property name="suffix" value=".jsp"/>
            </bean>
        </list>
    </property>
    <property name="defaultViews">
        <list>
            <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
        </list>
    </property>
</bean>

</beans>