<?xml version="1.0" encoding="UTF-8"?>
<!-- SubjectMapper.xml -->

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 구현체 자동 생성 하려면 SQL 파일을 DAO 인터페이스와 맞춰야 한다.
    namespace=인터페이스이름(패키지 이름 포함)
    SQL id=인터페이스 메서드이름
 -->
<mapper namespace="sems.dao.SubjectDao">
  <resultMap type="sems.vo.SubjectVo" id="subjectMap">
    <id column="SNO" property="no" />   <!-- PK 컬럼에 대해서만 설정한다. -->
    <result column="TITLE" property="title" />
    <result column="DEST" property="description" />
  </resultMap>
  
  <insert id="insert" parameterType="subjectVo">
    insert into SE_SUBJS(TITLE, DEST)
    values(#{title}, #{description})
  </insert>
    
  <!-- prameterType: fully-qualify class name 써야 한다.
      mybatis에 java.util.Map이 map으로 설정되어 있다.
   -->
  <select id="list" resultMap="subjectMap" parameterType="map">
    select SNO, TITLE
      from SE_SUBJS
      order by SNO desc
      limit #{startIndex}, #{pageSize}
  </select>

  <!-- 파라미터 타입이 기본타입일 경우, #{}에 사용하는 이름은 아무거나 괜찮다.
      그러나 기왕이면 의미있는 이름을 쓰자^^
   -->  
  <select id="detail" parameterType="int" resultMap="subjectMap">
    select SNO, TITLE, DEST
    from SE_SUBJS
    where SNO=#{no}
  </select>
  
  <update id="update" parameterType="subjectVo">
    update SE_SUBJS set
      TITLE=#{title},
      DEST=#{description}
    where SNO=#{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from SE_SUBJS
    where SNO=#{value} 
  </delete>
  
</mapper>
